<?php
// $Id$

/**
 * @file
 * User interface for RDF.
 */

/**
 * Implementation of hook_permission().
 */
function rdfui_permission() {
  return array('administer RDF CCK mappings' => 'Change the RDF mappings for types and fields');
}


/**
 * Implementation of hook_menu().
 */
function rdfui_menu() {
  $items = array();
  
  // Make sure this doesn't fire until content_types is working,
  // needed to avoid errors on initial installation.
  
  //if (!defined('MAINTENANCE_MODE')) {
    /*foreach (node_type_get_types() as $type) {
      $type_url_str = $content_type['url_str'];
      $items['admin/structure/types/manage/'. $type_url_str .'/rdf'] = array(
        'title' => 'Manage RDF mappings',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('rdfcck_admin_rdf_overview_form', $type_name),
        'access arguments' => array('administer RDF CCK mappings'),
        //'file' => 'includes/content.admin.inc',
        'type' => MENU_LOCAL_TASK,
        'weight' => 1,
      );
    }*/
  //}
  
  // Create tabs for all possible bundles.
  foreach (entity_get_info() as $obj_type => $info) {
    if ($info['fieldable']) {
      foreach ($info['bundles'] as $bundle_name => $bundle_info) {
        if (isset($bundle_info['admin'])) {
          // Extract informations from the bundle description.
          $path = $bundle_info['admin']['path'];
          $bundle_arg = isset($bundle_info['admin']['bundle argument']) ? $bundle_info['admin']['bundle argument'] : $bundle_name;
          $access = array_intersect_key($bundle_info['admin'], drupal_map_assoc(array('access callback', 'access arguments')));
          $instance_position = count(explode('/', $path)) + 1;
          
          $items["$path/rdf"] = array(
            'title' => 'Manage RDF Mappings',
            'load arguments' => array($obj_type, $bundle_arg),
            'page callback' => 'drupal_get_form',
            'page arguments' => array('rdfui_admin_rdf_overview_form', $obj_type, $bundle_arg, $instance_position),
            'type' => MENU_LOCAL_TASK
          ) + $access;        
        }
      }
    }
  }     
  
  return $items;
}

/**
 * Menu callback; listing of field RDF mappings for a content type.
 *
 * Allows the content type to be mapped to a RDF class and
 * fields to be mapped to RDF properties.
 */
function rdfui_admin_rdf_overview_form($form, &$form_state, $obj_type, $bundle, $instance) {
  
  $form['textfield'] = array(
    '#type' => 'textfield',
    '#title' => 'title'
  );
  
  return $form;
}

/**
 *  Implementation of hook_form_FORM_ID_alter().
 */

function rdfui_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
  
  $field_name = $form['#field']['field_name'];
  $instance = $form['#fields'][$field_name]['instance'];
  $label = isset($instance['label']) ? $instance['label'] : $instance['field_name'];
  $object_type = $instance['object_type'];
  
  $mapping = rdf_mapping_load($object_type, $instance['bundle']);
  
  $form['rdf'] = array(
    '#type' => 'fieldset',
    '#title' => t('@label RDF Mapping', array('@label' => $label)),
  );
  
  $form['rdf']['rdf_class'] = array(
    '#type' => 'textarea',
    '#title' => 'RDF Class',
    '#default_value' => empty($mapping[$field_name]['predicates']) ? '' : implode("\n",$mapping[$field_name]['predicates']),
    '#description' => t('Enter the mapping for @label here.', array('@label' => $label)),
  );
  
  $form['submit']['#weight'] = 1;
  
  // add submit and validate handlers
  $form['#validate'] = array_merge($form['#validate'], array('rdfui_form_field_ui_field_edit_form_validate'));
  $form['#submit'] = array_merge($form['#submit'], array('rdfui_form_field_ui_field_edit_form_submit'));
  

}

function rdfui_form_field_ui_field_edit_form_validate($form, &$form_state) {
  // validate
  // TODO: should comply with CURIE syntax
}

function rdfui_form_field_ui_field_edit_form_submit($form, &$form_state) {
  
  
  $field_name = $form['#field']['field_name'];
  $instance = $form['#fields'][$field_name]['instance'];
  $object_type = $instance['object_type'];
  
  $mapping = rdf_mapping_load($object_type);
    
  $mapping[$field_name]['predicates'] = explode("\n",$form_state['values']['rdf_class']);
  
  $mapping_info = array(
    'mapping' => $mapping,
    'type' => $object_type,
    'bundle' => $instance['bundle'] // TODO: is this right?
  );
  
  rdf_mapping_save($mapping_info);
  
}
 