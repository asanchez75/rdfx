<?php
// $Id:  $

/**
 * @file
 * Extends the RDF API of Drupal core to support more RDF seralizations formats
 * other RDF capabilities.
 */

/**
 * Namespace for the site vocabulary, used to generate local RDF properties and
 * classes for fields and content types.
 */
define('SITE_VOCABULARY_URI', url('ns', array('absolute' => TRUE, 'fragment' => ' ')));

/**
 * Path to the ARC2 PHP library.
 */
if (module_exists('libraries')) {
  define('RDF_ARC2_PATH', libraries_get_path('arc'));
}
else {
  define('RDF_ARC2_PATH', drupal_get_path('module', 'rdfx') . '/vendor/arc');
}

/**
 * Implements hook_init().
 */
function rdfx_init() {
  // Attempts to load the ARC2 library, if available.
  if (!class_exists('ARC2')) {
    @include_once RDF_ARC2_PATH . '/ARC2.php';
  }
  module_load_include('inc', 'rdfx', 'rdfx.terms');
  module_load_include('inc', 'rdfx', 'rdfx.import');
  module_load_include('inc', 'rdfx', 'rdfx.query');
}

/**
 * Implements hook_menu().
 */
function rdfx_menu() {
  $items['ns'] = array(
    'title' => 'Site vocabulary',
    'description' => 'RDF description of the site schema.',
    'page callback' => 'drupal_get_form',
//    'page arguments' => array(''),
    'access arguments' => array('access RDF data'),
    'file' => 'rdfx.pages.inc',
  );
  $items['node/%node/rdf'] = array(
    'title' => 'RDF',
    'page callback' => 'rdfx_entity_view',
    'page arguments' => array('node', 1),
    'access arguments' => array('access RDF data'),
    'weight' => 0,
    'type' => MENU_LOCAL_TASK,
//    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'rdfx.pages.inc',
  );
  return $items;
}

/**
 * Constructs the RDF representation of an entity of type node.
 */
function rdfx_build_rdf_node($node) {
  // URI of the node.
  $doc_uri = url('node/' . $node->nid, array('absolute' => TRUE));
  // URI of the resource being described in the node.
  // @todo allow for customized resource uris.
  $res_uri = url('node/' . $node->nid . '#this');

  // Instanciate node resource as ARC2 class and set base and namespaces.
  $res = ARC2::getResource();
  $res->setUri($doc_uri);
  $res->base = url('', array('absolute' => TRUE));
  $res->ns = rdfx_get_namespaces();

  // Non field API properties.
  if (!empty($node->rdf_mapping['rdftype'])) {
    $doc_props['rdf:type'] = $node->rdf_mapping['rdftype'];
  }
  if (!empty($node->rdf_mapping['title'])) {
    foreach ($node->rdf_mapping['title']['predicates'] as $p) {
      // @todo better way of typing literal or uris.
      $doc_props[$p] = $node->title;
    }
  }

  // Attach the node properties to the document URI.
  $index[$doc_uri] = $doc_props;
  // Expand all CURIEs and attach the index to the ARC2 resource.
  $res->index = $res->expandPNames($index);

  return $res;
}
