<?php
// $Id: $

/**
 * Test the RDF serialization functionality for nodes.
 */
class RdfxNodeSerializationTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'RDF serialization for Nodes',
      'description' => 'Create a node and test its RDF serialization.',
      'group' => 'RDFx',
    );
  }

  function setUp() {
    parent::setUp();
    $web_user = $this->drupalCreateUser(array('create article content', 'create page content'));
    $this->drupalLogin($web_user);
  }

  /**
   * Create a "Article" node and ensure it serialized properly.
   */
  function testRdfxNodeCreation() {
    // Create a node.
    $edit = array();
    $langcode = LANGUAGE_NONE;
    $edit["title"] = $this->randomName(8);
    $edit["body[$langcode][0][value]"] = $this->randomName(16);
    $this->drupalPost('node/add/article', $edit, t('Save'));

    // Check that the Article has been created.
    $this->assertRaw(t('!post %title has been created.', array('!post' => 'Article', '%title' => $edit["title"])), t('Article created.'));

    // Check that the node exists in the database.
    $node = $this->drupalGetNodeByTitle($edit["title"]);
    $this->assertTrue($node, t('Node found in database.'));

    // Get the node as RDF.
    $g = rdfx_build_rdf_node($node);

    // Inspect the PHP object returned by ARC2.
    // @todo check type of PHP object returned.

    // Test base uri.
    $this->assertTrue($g->base == url('', array('absolute' => TRUE)), t('Base uri set properly by ARC2.'));
    // Test graph uri.
    $this->assertTrue($g->uri == url('node/' . $node->nid, array('absolute' => TRUE)), t('Graph uri set properly by ARC2.'));

    // Test if core rdf namespaces are present.
    // @todo move this into a dedicate test for namespaces.
    $erroneous_core_ns = FALSE;
    foreach(rdf_rdf_namespaces() as $prefix => $ns) {
      if (!isset($g->ns[$prefix]) || $g->ns[$prefix] != $ns) {
        $erroneous_core_ns = TRUE;
      }
    }
    $this->assertFalse($erroneous_core_ns, t('Core RDF namespaces set properly by ARC2.'));

  }

}
